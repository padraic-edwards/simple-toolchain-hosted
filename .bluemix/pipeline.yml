---
defaultBaseImageVersion: latest
stages:
- name: BUILD
  inputs:
  - type: git
    branch: master
    service: ${SAMPLE_REPO}
  triggers:
  - type: commit
  properties:
  - name: SECREF1
    value: {kp::us-south.default.tmg-kp-1.cloud-apikey}
    type: text
  - name: SECREF2
    value: '{kp::us-south.default.tmg-kp-1.cloud-apikey}'
    type: text
  jobs:
  - name: Build
    type: builder
  - name: SecretsIntegration
    type: builder
    script: |
      #!/bin/bash
      #source <(curl -sSL "https://raw.githubusercontent.com/tonymcguckin/simple-toolchain-hosted/master/scripts/key_protect.sh")
      #section "Pipeline YML calling Key Protect integration..."
      #echo "VAULT_SERVICE_NAME=$VAULT_SERVICE_NAME"
      #echo "VAULT_REGION=$VAULT_REGION"
      #create_vault_instance "${VAULT_SERVICE_NAME}" "${VAULT_REGION}"
      echo "SECREF1=$SECREF1"
      echo "SECREF1=${SECREF1}"
      echo "SECREF2=$SECREF2"
      echo "SECREF2=${SECREF2}"
- name: DEPLOY
  inputs:
  - type: job
    stage: BUILD
    job: Build
  triggers:
  - type: stage
  properties:
  - name: CF_APP_NAME
    value: undefined
    type: text
  - name: APP_URL
    value: undefined
    type: text
  jobs:
  - name: Rolling Deploy
    type: deployer
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      application: ${CF_APP_NAME}
      api_key: ${API_KEY}
    script: |
      #!/bin/bash
      # Push app
      if ! cf app "$CF_APP"; then  
        cf push "$CF_APP"
      else
        OLD_CF_APP="${CF_APP}-OLD-$(date +"%s")"
        rollback() {
          set +e  
          if cf app "$OLD_CF_APP"; then
            cf logs "$CF_APP" --recent
            cf delete "$CF_APP" -f
            cf rename "$OLD_CF_APP" "$CF_APP"
          fi
          exit 1
        }
        set -e
        trap rollback ERR
        cf rename "$CF_APP" "$OLD_CF_APP"
        cf push "$CF_APP"
        cf delete "$OLD_CF_APP" -f
      fi
      # Export app name and URL for use in later Pipeline jobs
      export CF_APP_NAME="$CF_APP"
      export APP_URL=http://$(cf app $CF_APP_NAME | grep -e urls: -e routes: | awk '{print $2}')
      # View logs
      #cf logs "${CF_APP}" --recent
      
